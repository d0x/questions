<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>test</groupId>
	<artifactId>test</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<properties>
		<skipTests>false</skipTests>
		<java-version>1.7</java-version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<org.springframework-version>3.1.4.RELEASE</org.springframework-version>
		<org.springframework.data-version>1.3.4.RELEASE</org.springframework.data-version>

		<!-- UI -->
		<com.vaadin-version>7.1.1</com.vaadin-version>
		<com.vaadin.plugin-version>${com.vaadin-version}</com.vaadin.plugin-version>
		<org.vaadin.addons.cssinject-version>2.0.3</org.vaadin.addons.cssinject-version>
		<ru.xpoft.vaadin-version>2.0.1</ru.xpoft.vaadin-version>
		<javax.servlet-version>2.5</javax.servlet-version>

		<!-- AOP -->
		<cglib-version>2.2.2</cglib-version>
		<asm-version>3.3.1</asm-version>

		<!-- Persistence -->
		<com.googlecode.flyway-version>2.2</com.googlecode.flyway-version>
		<mysql-version>5.1.26</mysql-version>
		<org.hibernate.javax.persistence-version>1.0.1.Final</org.hibernate.javax.persistence-version>
		<org.hibernate-version>4.1.10.Final</org.hibernate-version>
		<org.hibernate-validator-version>4.2.0.Final</org.hibernate-validator-version>
		<org.hsqldb-version>2.2.9</org.hsqldb-version>


		<org.slf4j-version>1.7.3</org.slf4j-version>
		<log4j-version>1.2.17</log4j-version>

		<!-- Test -->
		<junit-version>4.11</junit-version>
		<org.hamcrest-version>1.3</org.hamcrest-version>
		<org.mockito-version>1.9.0</org.mockito-version>
	</properties>

	<dependencies>

		<!-- Spring Core -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>

		<!-- Spring test -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework-version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Lombock to get rid of Boilerplate code -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>0.12.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- Persistence -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>${org.springframework.data-version}</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>${org.hibernate.javax.persistence-version}</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${org.hibernate-version}</version>
		</dependency>

		<!-- To proxy classes with aop. E.g. @Transactional -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>${cglib-version}</version>
		</dependency>

		<!-- Hibernate needs this: http://www.mkyong.com/java/java-lang-classnotfoundexception-org-objectweb-asm-type/ -->
		<dependency>
			<groupId>asm</groupId>
			<artifactId>asm-util</artifactId>
			<version>${asm-version}</version>
		</dependency>

		<!-- JSR303 Bean Validation -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${org.hibernate-validator-version}</version>
		</dependency>

		<!-- Hsql In Memory DB for tests -->
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>${org.hsqldb-version}</version>
			<!-- Since we use hsql as default Value, we can't do it test scoped. -->
			<!-- <scope>test</scope> -->
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${org.mockito-version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit-dep</artifactId>
			<version>${junit-version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<!-- To specify the Java Version -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>${java-version}</source>
					<target>${java-version}</target>
				</configuration>
			</plugin>

			<!-- This plugin is responsable for the sourcecode upload on the deploy 
				phase. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12</version>
				<configuration>
					<skipTests>${skipTests}</skipTests>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>2.0</version>
			</plugin>

			<!-- IDE -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>